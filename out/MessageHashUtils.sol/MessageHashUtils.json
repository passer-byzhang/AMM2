{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204aecfe9497fbcddce11524fbbb646a4963525428925750017a91386480c4b7b764736f6c634300081a0033","sourceMap":"521:3181:53:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:53;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204aecfe9497fbcddce11524fbbb646a4963525428925750017a91386480c4b7b764736f6c634300081a0033","sourceMap":"521:3181:53:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed","urls":["bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0","dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":11539,"exportedSymbols":{"MessageHashUtils":[11538],"Strings":[10889]},"nodeType":"SourceUnit","src":"123:3580:53","nodes":[{"id":11466,"nodeType":"PragmaDirective","src":"123:24:53","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":11468,"nodeType":"ImportDirective","src":"149:39:53","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":11539,"sourceUnit":10890,"symbolAliases":[{"foreign":{"id":11467,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10889,"src":"157:7:53","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":11538,"nodeType":"ContractDefinition","src":"521:3181:53","nodes":[{"id":11479,"nodeType":"FunctionDefinition","src":"1222:433:53","nodes":[],"body":{"id":11478,"nodeType":"Block","src":"1314:341:53","nodes":[],"statements":[{"AST":{"nativeSrc":"1349:300:53","nodeType":"YulBlock","src":"1349:300:53","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:53","nodeType":"YulLiteral","src":"1370:4:53","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:53","nodeType":"YulLiteral","src":"1376:34:53","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:53","nodeType":"YulIdentifier","src":"1363:6:53"},"nativeSrc":"1363:48:53","nodeType":"YulFunctionCall","src":"1363:48:53"},"nativeSrc":"1363:48:53","nodeType":"YulExpressionStatement","src":"1363:48:53"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:53","nodeType":"YulLiteral","src":"1472:4:53","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:53","nodeType":"YulIdentifier","src":"1478:11:53"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:53","nodeType":"YulIdentifier","src":"1465:6:53"},"nativeSrc":"1465:25:53","nodeType":"YulFunctionCall","src":"1465:25:53"},"nativeSrc":"1465:25:53","nodeType":"YulExpressionStatement","src":"1465:25:53"},{"nativeSrc":"1544:31:53","nodeType":"YulAssignment","src":"1544:31:53","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:53","nodeType":"YulLiteral","src":"1564:4:53","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:53","nodeType":"YulLiteral","src":"1570:4:53","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:53","nodeType":"YulIdentifier","src":"1554:9:53"},"nativeSrc":"1554:21:53","nodeType":"YulFunctionCall","src":"1554:21:53"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:53","nodeType":"YulIdentifier","src":"1544:6:53"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":11475,"isOffset":false,"isSlot":false,"src":"1544:6:53","valueSize":1},{"declaration":11472,"isOffset":false,"isSlot":false,"src":"1478:11:53","valueSize":1}],"flags":["memory-safe"],"id":11477,"nodeType":"InlineAssembly","src":"1324:325:53"}]},"documentation":{"id":11470,"nodeType":"StructuredDocumentation","src":"552:665:53","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:53","parameters":{"id":11473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11472,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:53","nodeType":"VariableDeclaration","scope":11479,"src":"1254:19:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:53"},"returnParameters":{"id":11476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11475,"mutability":"mutable","name":"digest","nameLocation":"1306:6:53","nodeType":"VariableDeclaration","scope":11479,"src":"1298:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:53"},"scope":11538,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":11505,"nodeType":"FunctionDefinition","src":"2121:229:53","nodes":[],"body":{"id":11504,"nodeType":"Block","src":"2207:143:53","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":11491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:53","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":11496,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11482,"src":"2316:7:53","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":11497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:53","memberName":"length","nodeType":"MemberAccess","src":"2316:14:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11494,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10889,"src":"2299:7:53","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$10889_$","typeString":"type(library Strings)"}},"id":11495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:53","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":10637,"src":"2299:16:53","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":11498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":11493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:53","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11492,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:53","typeDescriptions":{}}},"id":11499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":11500,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11482,"src":"2334:7:53","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":11489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:53","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11488,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:53","typeDescriptions":{}}},"id":11490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:53","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:53","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11487,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:53","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":11486,"id":11503,"nodeType":"Return","src":"2217:126:53"}]},"documentation":{"id":11480,"nodeType":"StructuredDocumentation","src":"1661:455:53","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:53","parameters":{"id":11483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11482,"mutability":"mutable","name":"message","nameLocation":"2166:7:53","nodeType":"VariableDeclaration","scope":11505,"src":"2153:20:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11481,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:53","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:53"},"returnParameters":{"id":11486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11505,"src":"2198:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:53"},"scope":11538,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":11525,"nodeType":"FunctionDefinition","src":"2693:191:53","nodes":[],"body":{"id":11524,"nodeType":"Block","src":"2804:80:53","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":11518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:53","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":11519,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11508,"src":"2860:9:53","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11520,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11510,"src":"2871:4:53","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":11516,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:53","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:53","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:53","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11515,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:53","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":11514,"id":11523,"nodeType":"Return","src":"2814:63:53"}]},"documentation":{"id":11506,"nodeType":"StructuredDocumentation","src":"2356:332:53","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:53","parameters":{"id":11511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11508,"mutability":"mutable","name":"validator","nameLocation":"2742:9:53","nodeType":"VariableDeclaration","scope":11525,"src":"2734:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11507,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11510,"mutability":"mutable","name":"data","nameLocation":"2766:4:53","nodeType":"VariableDeclaration","scope":11525,"src":"2753:17:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11509,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:53","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:53"},"returnParameters":{"id":11514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11525,"src":"2795:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:53"},"scope":11538,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":11537,"nodeType":"FunctionDefinition","src":"3326:374:53","nodes":[],"body":{"id":11536,"nodeType":"Block","src":"3435:265:53","nodes":[],"statements":[{"AST":{"nativeSrc":"3470:224:53","nodeType":"YulBlock","src":"3470:224:53","statements":[{"nativeSrc":"3484:22:53","nodeType":"YulVariableDeclaration","src":"3484:22:53","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:53","nodeType":"YulLiteral","src":"3501:4:53","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:53","nodeType":"YulIdentifier","src":"3495:5:53"},"nativeSrc":"3495:11:53","nodeType":"YulFunctionCall","src":"3495:11:53"},"variables":[{"name":"ptr","nativeSrc":"3488:3:53","nodeType":"YulTypedName","src":"3488:3:53","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:53","nodeType":"YulIdentifier","src":"3526:3:53"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:53","nodeType":"YulLiteral","src":"3531:10:53","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:53","nodeType":"YulIdentifier","src":"3519:6:53"},"nativeSrc":"3519:23:53","nodeType":"YulFunctionCall","src":"3519:23:53"},"nativeSrc":"3519:23:53","nodeType":"YulExpressionStatement","src":"3519:23:53"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:53","nodeType":"YulIdentifier","src":"3566:3:53"},{"kind":"number","nativeSrc":"3571:4:53","nodeType":"YulLiteral","src":"3571:4:53","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:53","nodeType":"YulIdentifier","src":"3562:3:53"},"nativeSrc":"3562:14:53","nodeType":"YulFunctionCall","src":"3562:14:53"},{"name":"domainSeparator","nativeSrc":"3578:15:53","nodeType":"YulIdentifier","src":"3578:15:53"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:53","nodeType":"YulIdentifier","src":"3555:6:53"},"nativeSrc":"3555:39:53","nodeType":"YulFunctionCall","src":"3555:39:53"},"nativeSrc":"3555:39:53","nodeType":"YulExpressionStatement","src":"3555:39:53"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:53","nodeType":"YulIdentifier","src":"3618:3:53"},{"kind":"number","nativeSrc":"3623:4:53","nodeType":"YulLiteral","src":"3623:4:53","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:53","nodeType":"YulIdentifier","src":"3614:3:53"},"nativeSrc":"3614:14:53","nodeType":"YulFunctionCall","src":"3614:14:53"},{"name":"structHash","nativeSrc":"3630:10:53","nodeType":"YulIdentifier","src":"3630:10:53"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:53","nodeType":"YulIdentifier","src":"3607:6:53"},"nativeSrc":"3607:34:53","nodeType":"YulFunctionCall","src":"3607:34:53"},"nativeSrc":"3607:34:53","nodeType":"YulExpressionStatement","src":"3607:34:53"},{"nativeSrc":"3654:30:53","nodeType":"YulAssignment","src":"3654:30:53","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:53","nodeType":"YulIdentifier","src":"3674:3:53"},{"kind":"number","nativeSrc":"3679:4:53","nodeType":"YulLiteral","src":"3679:4:53","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:53","nodeType":"YulIdentifier","src":"3664:9:53"},"nativeSrc":"3664:20:53","nodeType":"YulFunctionCall","src":"3664:20:53"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:53","nodeType":"YulIdentifier","src":"3654:6:53"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":11533,"isOffset":false,"isSlot":false,"src":"3654:6:53","valueSize":1},{"declaration":11528,"isOffset":false,"isSlot":false,"src":"3578:15:53","valueSize":1},{"declaration":11530,"isOffset":false,"isSlot":false,"src":"3630:10:53","valueSize":1}],"flags":["memory-safe"],"id":11535,"nodeType":"InlineAssembly","src":"3445:249:53"}]},"documentation":{"id":11526,"nodeType":"StructuredDocumentation","src":"2890:431:53","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:53","parameters":{"id":11531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11528,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:53","nodeType":"VariableDeclaration","scope":11537,"src":"3351:23:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11530,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:53","nodeType":"VariableDeclaration","scope":11537,"src":"3376:18:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:53"},"returnParameters":{"id":11534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11533,"mutability":"mutable","name":"digest","nameLocation":"3427:6:53","nodeType":"VariableDeclaration","scope":11537,"src":"3419:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:53"},"scope":11538,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":11469,"nodeType":"StructuredDocumentation","src":"190:330:53","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[11538],"name":"MessageHashUtils","nameLocation":"529:16:53","scope":11539,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":53}